{"ast":null,"code":"import _objectSpread from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/components/pages/SignInForm.js\";\nimport React from \"react\";\nimport { Link, Redirect, NavLink, Navigate } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport \"./main.css\";\nimport Store from '../../Redux/Store';\nimport * as action from \"../../Redux/Action/TokenAction\";\nimport Navbar from \"../Navbar\";\nimport { ACTION_USER_LOGIN } from \"../../Redux/Action/UserAction\";\nimport * as actions from '../../Redux/Action/ProductAction';\nimport * as action1 from '../../Redux/Action/CategoryAction';\nimport ProductService from '../../Service/ProductService';\nimport CategoryService from '../../Service/CategoryService';\nimport UserService from '../../Service/UserService';\nimport { ACTION_LOAD_USER_DATA } from '../../Redux/Action/UserAction';\nimport { ACTION_USER_LOGOUT } from '../../Redux/Action/UserAction';\nimport * as userBidAction from '../../Redux/Action/BidUserAction';\nimport * as otherUsersBidsAction from '../../Redux/Action/BidOtherUsersAction';\nimport BidService from '../../Service/BidService';\nimport PaymentService from '../../Service/PaymentService';\nimport * as paymentAction from '../../Redux/Action/PaymentType';\nimport OrderService from '../../Service/OrderService';\nimport * as orderAction from '../../Redux/Action/OrderAction';\nimport { GoogleLoginButton, FacebookLoginButton } from \"react-social-login-buttons\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar SignInForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(SignInForm, _React$Component);\n\n  var _super = _createSuper(SignInForm);\n\n  function SignInForm() {\n    var _this;\n\n    _classCallCheck(this, SignInForm);\n\n    _this = _super.call(this);\n\n    _this.login = function (event) {\n      var ob = {\n        email: _this.email.value,\n        password: _this.password.value\n      };\n      /*  function login(){\r\n           let history = useHistory();\r\n      \r\n       } */\n\n      fetch(\"http://localhost:8080/web/login\", {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(ob)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data); // var token=data.token\n\n        if (data.status) {\n          Store.dispatch(_objectSpread(_objectSpread({}, ACTION_USER_LOGIN), {}, {\n            payload: {\n              token: data.token\n            }\n          }));\n\n          _this.setState({\n            loginStatus: true,\n            regmsg: data.msg\n          });\n        } else {\n          _this.setState({\n            regmsg: data.msg\n          });\n        }\n      });\n      ;\n      event.preventDefault();\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      loginStatus: false,\n      counter: 0\n    };\n    return _this;\n  }\n\n  _createClass(SignInForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var i = this.state.counter;\n      i = i + 1;\n\n      if (i == 1) {\n        //console.log(\"After Mounting: \",this.props.token)\n        CategoryService.getCategories().then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.statusCode == 200) {\n            Store.dispatch(_objectSpread(_objectSpread({}, action1.ACTION_LOAD_CATEGORIES), {}, {\n              payload: {\n                categories: data.data\n              }\n            }));\n            ProductService.getProducts().then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              if (data.statusCode == 200) {\n                Store.dispatch(_objectSpread(_objectSpread({}, actions.ACTION_LOAD_PRODUCTS), {}, {\n                  payload: {\n                    products: data.data\n                  }\n                })); //User code\n\n                UserService.getUser(_this2.props.user.token).then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  if (data.statusCode == 200) {\n                    Store.dispatch(_objectSpread(_objectSpread({}, ACTION_LOAD_USER_DATA), {}, {\n                      payload: {\n                        userdetails: data.data\n                      }\n                    }));\n                  }\n                }); //user end\n              }\n            }); //category end\n          }\n        }); //fetching user bids\n\n        BidService.fetchUserBid().then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.statusCode == 200) {\n            Store.dispatch(_objectSpread(_objectSpread({}, userBidAction.ACTION_LOAD_LOGGED_USER_BIDS), {}, {\n              payload: {\n                bidlist: data.data\n              }\n            }));\n          }\n        }); //fetched user bids\n        //fetching other users biding details\n\n        BidService.fetchOtherUsersBids().then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.statusCode == 200) {\n            Store.dispatch(_objectSpread(_objectSpread({}, otherUsersBidsAction.ACTION_LOAD_USER_PRODUCTS_BIDS), {}, {\n              payload: {\n                bidlist: data.data\n              }\n            }));\n          }\n        }); //fetched other users biding details\n        //fetching payementtype\n\n        PaymentService.getPaymentTypes().then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.statusCode == 200) {\n            Store.dispatch(_objectSpread(_objectSpread({}, paymentAction.ACTION_LOAD_PAYMENTTYPE), {}, {\n              payload: {\n                paymenttype: data.data\n              }\n            }));\n          }\n        }); //fetched payementtype\n        //fetching UserOrderDetails\n\n        OrderService.fetchUserOrders().then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.statusCode == 200) {\n            Store.dispatch(_objectSpread(_objectSpread({}, orderAction.ACTION_LOAD_USER_ORDERS), {}, {\n              payload: {\n                userorderlist: data.data\n              }\n            }));\n          }\n        }); //fetched UserOrderDetails\n        //fetching OrderDetails\n\n        OrderService.fetchOrders().then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.statusCode == 200) {\n            Store.dispatch(_objectSpread(_objectSpread({}, orderAction.ACTION_LOAD_ORDERS), {}, {\n              payload: {\n                orderlist: data.data\n              }\n            }));\n          }\n        }); //fetched OrderDetails\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loginStatus) {\n        return /*#__PURE__*/React.createElement(Navigate, {\n          to: \"/dashboard\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 12\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"appAside\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"appForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageSwitcher\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        activeClassName: \"pageSwitcherItem-active\",\n        className: \"pageSwitcherItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, \"Sign In\"), /*#__PURE__*/React.createElement(Link, {\n        exact: true,\n        to: \"/sign-up\",\n        activeClassName: \"pageSwitcherItem-active\",\n        className: \"pageSwitcherItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"formCenter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"formFields\",\n        onSubmit: this.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"formField\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"formFieldLabel\",\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      }, \"E-Mail Address\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        ref: function ref(c) {\n          return _this3.email = c;\n        },\n        id: \"email\",\n        className: \"formFieldInput\",\n        placeholder: \"Enter your email\",\n        name: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"formField\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"formFieldLabel\",\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        ref: function ref(c) {\n          return _this3.password = c;\n        },\n        id: \"password\",\n        className: \"formFieldInput\",\n        placeholder: \"Enter your password\",\n        name: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"formField\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        name: \"login\",\n        class: \"login\",\n        value: \"login\",\n        className: \"formFieldButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }, \"Sign In\"), \" \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        className: \"formFieldLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, \"Create an account\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"socialMediaButtons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"googleButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(GoogleLoginButton, {\n        onClick: function onClick() {\n          return alert(\"Login\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instagramButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FacebookLoginButton, {\n        onClick: function onClick() {\n          return alert(\"Login\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 19\n        }\n      }))))))));\n    }\n  }]);\n\n  return SignInForm;\n}(React.Component);\n\nexport default connect(mapStateToProps)(SignInForm);","map":{"version":3,"sources":["/home/akash/srikar/DealsBazzar-1-main/UI/NewCode/react-login-form/src/components/pages/SignInForm.js"],"names":["React","Link","Redirect","NavLink","Navigate","connect","Store","action","Navbar","ACTION_USER_LOGIN","actions","action1","ProductService","CategoryService","UserService","ACTION_LOAD_USER_DATA","ACTION_USER_LOGOUT","userBidAction","otherUsersBidsAction","BidService","PaymentService","paymentAction","OrderService","orderAction","GoogleLoginButton","FacebookLoginButton","mapStateToProps","state","user","SignInForm","login","event","ob","email","value","password","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","status","dispatch","payload","token","setState","loginStatus","regmsg","msg","preventDefault","counter","i","getCategories","statusCode","ACTION_LOAD_CATEGORIES","categories","getProducts","ACTION_LOAD_PRODUCTS","products","getUser","props","userdetails","fetchUserBid","ACTION_LOAD_LOGGED_USER_BIDS","bidlist","fetchOtherUsersBids","ACTION_LOAD_USER_PRODUCTS_BIDS","getPaymentTypes","ACTION_LOAD_PAYMENTTYPE","paymenttype","fetchUserOrders","ACTION_LOAD_USER_ORDERS","userorderlist","fetchOrders","ACTION_LOAD_ORDERS","orderlist","c","alert","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,QAAlC,QAAkD,kBAAlD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAO,KAAKC,OAAZ,MAAyB,kCAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mCAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,OAAO,KAAKC,aAAZ,MAA+B,kCAA/B;AACA,OAAO,KAAKC,oBAAZ,MAAsC,wCAAtC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAO,KAAKC,aAAZ,MAA+B,gCAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,gCAA7B;AACA,SACEC,iBADF,EAEEC,mBAFF,QAGO,4BAHP;;AAKA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;IAMMC,U;;;;;AACJ,wBAAc;AAAA;;AAAA;;AACZ;;AADY,UAkIhBC,KAlIgB,GAkIR,UAACC,KAAD,EAAW;AACjB,UAAIC,EAAE,GAAG;AAEPC,QAAAA,KAAK,EAAE,MAAKA,KAAL,CAAWC,KAFX;AAGPC,QAAAA,QAAQ,EAAE,MAAKA,QAAL,CAAcD;AAHjB,OAAT;AAOA;AACF;AACA;AACA;;AAGEE,MAAAA,KAAK,oCAAoC;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF8B;AAKvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,EAAf;AALiC,OAApC,CAAL,CAMGU,IANH,CAMQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OANhB,EAMqCF,IANrC,CAM0C,UAAAG,IAAI,EAAI;AAChDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADgD,CAEhD;;AACA,YAAIA,IAAI,CAACG,MAAT,EAAiB;AACf1C,UAAAA,KAAK,CAAC2C,QAAN,iCACKxC,iBADL;AACwByC,YAAAA,OAAO,EAAE;AAC7BC,cAAAA,KAAK,EAAEN,IAAI,CAACM;AADiB;AADjC;;AAOA,gBAAKC,QAAL,CAAc;AAAEC,YAAAA,WAAW,EAAE,IAAf;AAAoBC,YAAAA,MAAM,EAAET,IAAI,CAACU;AAAjC,WAAd;AACD,SATD,MASK;AACH,gBAAKH,QAAL,CAAc;AAACE,YAAAA,MAAM,EAAET,IAAI,CAACU;AAAd,WAAd;AACD;AACF,OArBD;AAqBG;AACHxB,MAAAA,KAAK,CAACyB,cAAN;AACD,KAvKe;;AAGZ,UAAK7B,KAAL,GAAa;AACXM,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGXkB,MAAAA,WAAW,EAAE,KAHF;AAIXI,MAAAA,OAAO,EAAE;AAJE,KAAb;AAHY;AASb;;;;WAED,8BAAqB;AAAA;;AACnB,UAAIC,CAAC,GAAC,KAAK/B,KAAL,CAAW8B,OAAjB;AACAC,MAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;;AACA,UAAGA,CAAC,IAAE,CAAN,EAAQ;AACR;AACA7C,QAAAA,eAAe,CAAC8C,aAAhB,GACGjB,IADH,CACQ,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,cAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAC1BtD,YAAAA,KAAK,CAAC2C,QAAN,iCACKtC,OAAO,CAACkD,sBADb;AACqCX,cAAAA,OAAO,EAAE;AAC1CY,gBAAAA,UAAU,EAAEjB,IAAI,CAACA;AADyB;AAD9C;AAMAjC,YAAAA,cAAc,CAACmD,WAAf,GACGrB,IADH,CACQ,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAEZ,kBAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAE1BtD,gBAAAA,KAAK,CAAC2C,QAAN,iCACKvC,OAAO,CAACsD,oBADb;AACmCd,kBAAAA,OAAO,EAAE;AACxCe,oBAAAA,QAAQ,EAAEpB,IAAI,CAACA;AADyB;AAD5C,oBAF0B,CAO1B;;AACA/B,gBAAAA,WAAW,CAACoD,OAAZ,CAAoB,MAAI,CAACC,KAAL,CAAWvC,IAAX,CAAgBuB,KAApC,EACGT,IADH,CACQ,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,iBADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAEZ,sBAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAE1BtD,oBAAAA,KAAK,CAAC2C,QAAN,iCACKlC,qBADL;AAEEmC,sBAAAA,OAAO,EAAE;AAAEkB,wBAAAA,WAAW,EAAEvB,IAAI,CAACA;AAApB;AAFX;AAID;AACF,iBAXH,EAR0B,CAoB1B;AACD;AACF,aA1BH,EAP0B,CAkC1B;AACD;AACF,SAvCH,EAFQ,CA0CR;;AACA1B,QAAAA,UAAU,CAACkD,YAAX,GACG3B,IADH,CACQ,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAEZ,cAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAE1BtD,YAAAA,KAAK,CAAC2C,QAAN,iCACKhC,aAAa,CAACqD,4BADnB;AACiDpB,cAAAA,OAAO,EAAE;AACtDqB,gBAAAA,OAAO,EAAE1B,IAAI,CAACA;AADwC;AAD1D;AAKD;AACF,SAZH,EA3CQ,CAwDR;AACA;;AACA1B,QAAAA,UAAU,CAACqD,mBAAX,GACG9B,IADH,CACQ,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAEZ,cAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAC1BtD,YAAAA,KAAK,CAAC2C,QAAN,iCACK/B,oBAAoB,CAACuD,8BAD1B;AAC0DvB,cAAAA,OAAO,EAAE;AAC/DqB,gBAAAA,OAAO,EAAE1B,IAAI,CAACA;AADiD;AADnE;AAKD;AACF,SAXH,EA1DQ,CAsER;AACA;;AACAzB,QAAAA,cAAc,CAACsD,eAAf,GACGhC,IADH,CACQ,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAEZ,cAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAC1BtD,YAAAA,KAAK,CAAC2C,QAAN,iCACK5B,aAAa,CAACsD,uBADnB;AAC4CzB,cAAAA,OAAO,EAAE;AACjD0B,gBAAAA,WAAW,EAAE/B,IAAI,CAACA;AAD+B;AADrD;AAKD;AACF,SAXH,EAxEQ,CAoFR;AACA;;AACAvB,QAAAA,YAAY,CAACuD,eAAb,GACGnC,IADH,CACQ,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAEZ,cAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAC1BtD,YAAAA,KAAK,CAAC2C,QAAN,iCACK1B,WAAW,CAACuD,uBADjB;AAC0C5B,cAAAA,OAAO,EAAE;AAC/C6B,gBAAAA,aAAa,EAAElC,IAAI,CAACA;AAD2B;AADnD;AAKD;AACF,SAXH,EAtFQ,CAkGR;AACA;;AACAvB,QAAAA,YAAY,CAAC0D,WAAb,GACGtC,IADH,CACQ,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAEZ,cAAIA,IAAI,CAACe,UAAL,IAAmB,GAAvB,EAA4B;AAC1BtD,YAAAA,KAAK,CAAC2C,QAAN,iCACK1B,WAAW,CAAC0D,kBADjB;AACqC/B,cAAAA,OAAO,EAAE;AAC1CgC,gBAAAA,SAAS,EAAErC,IAAI,CAACA;AAD0B;AAD9C;AAKD;AACF,SAXH,EApGQ,CAgHR;AACD;AACF;;;WA4CD,kBAAS;AAAA;;AACP,UAAI,KAAKlB,KAAL,CAAW0B,WAAf,EAA4B;AAC1B,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,0BAEE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,eAAe,EAAC,yBAFlB;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAQE,oBAAC,IAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,eAAe,EAAC,yBAHlB;AAIE,QAAA,SAAS,EAAC,kBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,CAFF,eAsBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,QAAQ,EAAE,KAAKvB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,OAAO,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,GAAG,EAAE,aAAAqD,CAAC;AAAA,iBAAI,MAAI,CAAClD,KAAL,GAAakD,CAAjB;AAAA,SAFR;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,SAAS,EAAC,gBAJZ;AAKE,QAAA,WAAW,EAAC,kBALd;AAME,QAAA,IAAI,EAAC,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,eAcE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,OAAO,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,GAAG,EAAE,aAAAA,CAAC;AAAA,iBAAI,MAAI,CAAChD,QAAL,GAAgBgD,CAApB;AAAA,SAFR;AAGE,QAAA,EAAE,EAAC,UAHL;AAIE,QAAA,SAAS,EAAC,gBAJZ;AAKE,QAAA,WAAW,EAAC,qBALd;AAME,QAAA,IAAI,EAAC,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAdF,eA2BE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,OAA3B;AAAmC,QAAA,KAAK,EAAC,OAAzC;AAAiD,QAAA,KAAK,EAAC,OAAvD;AAA+D,QAAA,SAAS,EAAC,iBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAC8G,GAD9G,eAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CA3BF,eAkCE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,iBAAD;AAAmB,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,CAAC,OAAD,CAAX;AAAA,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,mBAAD;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAMA,KAAK,CAAC,OAAD,CAAX;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CAlCF,CADF,CAtBF,CAFF,CAFF,CAFF;AA+ED;;;;EAhQwBpF,KAAK,CAACqF,S;;AAmQ/B,eAAehF,OAAO,CAACqB,eAAD,CAAP,CAAyBG,UAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, Redirect, NavLink, Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport \"./main.css\"\r\nimport Store from '../../Redux/Store'\r\nimport * as action from \"../../Redux/Action/TokenAction\"\r\nimport Navbar from \"../Navbar\";\r\nimport { ACTION_USER_LOGIN } from \"../../Redux/Action/UserAction\";\r\n\r\nimport * as actions from '../../Redux/Action/ProductAction'\r\nimport * as action1 from '../../Redux/Action/CategoryAction'\r\nimport ProductService from '../../Service/ProductService'\r\nimport CategoryService from '../../Service/CategoryService'\r\nimport UserService from '../../Service/UserService'\r\nimport { ACTION_LOAD_USER_DATA } from '../../Redux/Action/UserAction'\r\nimport { ACTION_USER_LOGOUT } from '../../Redux/Action/UserAction'\r\nimport * as userBidAction from '../../Redux/Action/BidUserAction'\r\nimport * as otherUsersBidsAction from '../../Redux/Action/BidOtherUsersAction'\r\nimport BidService from '../../Service/BidService'\r\nimport PaymentService from '../../Service/PaymentService'\r\nimport * as paymentAction from '../../Redux/Action/PaymentType'\r\nimport OrderService from '../../Service/OrderService'\r\nimport * as orderAction from '../../Redux/Action/OrderAction' \r\nimport {\r\n  GoogleLoginButton,\r\n  FacebookLoginButton\r\n} from \"react-social-login-buttons\";\r\n\r\nvar mapStateToProps = state => {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\nclass SignInForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loginStatus: false,\r\n      counter: 0\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var i=this.state.counter\r\n    i=i+1\r\n    if(i==1){\r\n    //console.log(\"After Mounting: \",this.props.token)\r\n    CategoryService.getCategories()\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.statusCode == 200) {\r\n          Store.dispatch({\r\n            ...action1.ACTION_LOAD_CATEGORIES, payload: {\r\n              categories: data.data\r\n            }\r\n          })\r\n\r\n          ProductService.getProducts()\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n              if (data.statusCode == 200) {\r\n\r\n                Store.dispatch({\r\n                  ...actions.ACTION_LOAD_PRODUCTS, payload: {\r\n                    products: data.data\r\n                  }\r\n                })\r\n                //User code\r\n                UserService.getUser(this.props.user.token)\r\n                  .then(response => response.json())\r\n                  .then(data => {\r\n\r\n                    if (data.statusCode == 200) {\r\n\r\n                      Store.dispatch({\r\n                        ...ACTION_LOAD_USER_DATA,\r\n                        payload: { userdetails: data.data }\r\n                      })\r\n                    }\r\n                  })\r\n                //user end\r\n              }\r\n            })\r\n          //category end\r\n        }\r\n      })\r\n    //fetching user bids\r\n    BidService.fetchUserBid()\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        \r\n        if (data.statusCode == 200) {\r\n\r\n          Store.dispatch({\r\n            ...userBidAction.ACTION_LOAD_LOGGED_USER_BIDS, payload: {\r\n              bidlist: data.data\r\n            }\r\n          })\r\n        }\r\n      })\r\n    //fetched user bids\r\n    //fetching other users biding details\r\n    BidService.fetchOtherUsersBids()\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        \r\n        if (data.statusCode == 200) {\r\n          Store.dispatch({\r\n            ...otherUsersBidsAction.ACTION_LOAD_USER_PRODUCTS_BIDS, payload: {\r\n              bidlist: data.data\r\n            }\r\n          })\r\n        }\r\n      })\r\n    //fetched other users biding details\r\n    //fetching payementtype\r\n    PaymentService.getPaymentTypes()\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        \r\n        if (data.statusCode == 200) {\r\n          Store.dispatch({\r\n            ...paymentAction.ACTION_LOAD_PAYMENTTYPE, payload: {\r\n              paymenttype: data.data\r\n            }\r\n          })\r\n        }\r\n      })\r\n    //fetched payementtype\r\n    //fetching UserOrderDetails\r\n    OrderService.fetchUserOrders()\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        \r\n        if (data.statusCode == 200) {\r\n          Store.dispatch({\r\n            ...orderAction.ACTION_LOAD_USER_ORDERS, payload: {\r\n              userorderlist: data.data\r\n            }\r\n          })\r\n        }\r\n      })\r\n    //fetched UserOrderDetails\r\n    //fetching OrderDetails\r\n    OrderService.fetchOrders()\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        \r\n        if (data.statusCode == 200) {\r\n          Store.dispatch({\r\n            ...orderAction.ACTION_LOAD_ORDERS, payload: {\r\n              orderlist: data.data\r\n            }\r\n          })\r\n        }\r\n      })\r\n    //fetched OrderDetails\r\n  }\r\n}\r\n\r\nlogin = (event) => {\r\n  var ob = {\r\n\r\n    email: this.email.value,\r\n    password: this.password.value,\r\n\r\n  }\r\n\r\n  /*  function login(){\r\n\r\n     let history = useHistory();\r\n  \r\n   } */\r\n\r\n  fetch(`http://localhost:8080/web/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(ob)\r\n  }).then(response => response.json()).then(data => {\r\n    console.log(data);\r\n    // var token=data.token\r\n    if (data.status) {\r\n      Store.dispatch({\r\n        ...ACTION_USER_LOGIN, payload: {\r\n          token: data.token\r\n\r\n        }\r\n\r\n      })\r\n      this.setState({ loginStatus: true,regmsg: data.msg })\r\n    }else{\r\n      this.setState({regmsg: data.msg })\r\n    }\r\n  });;\r\n  event.preventDefault()\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n  if (this.state.loginStatus) {\r\n    return <Navigate to=\"/dashboard\"></Navigate>\r\n  }\r\n  return (\r\n\r\n    <>\r\n      <Navbar />\r\n      <div className=\"App\">\r\n        <div className=\"appAside\" />\r\n        <div className=\"appForm\">\r\n\r\n          <div className=\"pageSwitcher\">\r\n            <Link\r\n              to=\"/\"\r\n              activeClassName=\"pageSwitcherItem-active\"\r\n              className=\"pageSwitcherItem\"\r\n            >\r\n              Sign In\r\n            </Link>\r\n            <Link\r\n              exact\r\n              to=\"/sign-up\"\r\n              activeClassName=\"pageSwitcherItem-active\"\r\n              className=\"pageSwitcherItem\"\r\n            >\r\n              Sign Up\r\n            </Link>\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"formCenter\">\r\n            <form className=\"formFields\" onSubmit={this.login}>\r\n              <div className=\"formField\">\r\n                <label className=\"formFieldLabel\" htmlFor=\"email\">\r\n                  E-Mail Address\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  ref={c => this.email = c}\r\n                  id=\"email\"\r\n                  className=\"formFieldInput\"\r\n                  placeholder=\"Enter your email\"\r\n                  name=\"email\" />\r\n              </div>\r\n\r\n              <div className=\"formField\">\r\n                <label className=\"formFieldLabel\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  ref={c => this.password = c}\r\n                  id=\"password\"\r\n                  className=\"formFieldInput\"\r\n                  placeholder=\"Enter your password\"\r\n                  name=\"password\" />\r\n              </div>\r\n\r\n              <div className=\"formField\">\r\n                <button type=\"submit\" name=\"login\" class=\"login\" value=\"login\" className=\"formFieldButton\">Sign In</button>{\" \"}\r\n                <Link to=\"/\" className=\"formFieldLink\">\r\n                  Create an account\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"socialMediaButtons\">\r\n                <div className=\"googleButton\">\r\n                  <GoogleLoginButton onClick={() => alert(\"Login\")} />\r\n                </div>\r\n\r\n                <div className=\"instagramButton\">\r\n                  <FacebookLoginButton onClick={() => alert(\"Login\")} />\r\n\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignInForm);"]},"metadata":{},"sourceType":"module"}